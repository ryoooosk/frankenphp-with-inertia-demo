name: PHPUnit Tests

on:
  pull_request:
    types: [opened, synchronize]
    paths:
      - "src/**/*.php"
      - "src/phpunit.xml"
      - "src/package-lock.json"
      - "src/composer.lock"
      - ".github/workflows/**"
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: testing
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.4"

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Create cache directories
        run: |
          mkdir -p bootstrap/cache
          mkdir -p storage/framework/cache/data
          mkdir -p storage/framework/sessions
          mkdir -p storage/framework/views
          mkdir -p storage/logs
        working-directory: ./src

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-suggest
        working-directory: ./src

      - name: Copy .env file
        run: cp .env.ci .env
        working-directory: ./src

      - name: Generate application key
        run: php artisan key:generate
        working-directory: ./src

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: ./src/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install npm dependencies
        run: npm i
        working-directory: ./src

      - name: Build assets
        run: npm run build
        working-directory: ./src

      - name: Run PHPUnit
        run: composer run test
        working-directory: ./src
        env:
          DB_CONNECTION: pgsql
          DB_HOST: localhost
          DB_PORT: 5432
          DB_DATABASE: testing
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
